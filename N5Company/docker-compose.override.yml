version: '3.4'

services:

  db:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: sql_server
    environment:
        SA_PASSWORD: 123456aA_!
        ACCEPT_EULA: Y
        MSSQL_DBNAME: N5CompanyDB
    ports:
        - "1433:1433"
    networks:
      - my-network

  n5companyapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerCompose
    links:
      - db
    depends_on:
        elasticsearch:
          condition: service_started
        db:
          condition: service_started
    ports:
      - "5000:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - my-network
      - kafka-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - my-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    environment:
        ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9400:9400"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9400
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - kafka-net
 
networks:
  my-network:
    driver: bridge
  kafka-net:
    driver: bridge

volumes:
  elasticsearch-data:
    driver: local